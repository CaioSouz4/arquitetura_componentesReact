{"version":3,"sources":["service/api.jsx","Components/UserPresentationComponent.jsx","Components/UserListContainer.jsx","App.jsx","index.js"],"names":["api","axios","create","baseURL","apiFlags","useStyles","makeStyles","root","margin","display","backgroundColor","minWidth","width","height","content","flexWrap","flex","maxWidth","color","img","div","icon","button","UserPresentationComponent","props","classes","className","persons","map","p","Card","CardContent","Typography","component","variant","name","first","location","country","city","alt","src","alpha2Code","gender","CardMedia","image","picture","large","Button","onClick","newPerson","UserListContainer","a","async","get","then","response","person","data","results","setState","state","Object","assign","componentDidMount","flag","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iUAEaA,EAAMC,IAAMC,OAAO,CAAEC,QAAS,8BAC9BC,EAAWH,IAAMC,OAAO,CAAEC,QAAS,2C,gDCA1CE,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,gBAAiB,UACjBC,SAAU,QACVC,MAAO,QACPC,OAAQ,SAEVC,QAAS,CACPC,SAAU,OACVC,KAAM,WACNC,SAAU,MACVC,MAAO,WAETC,IAAK,CACHP,MAAO,SAETQ,IAAK,CACHX,QAAS,OACTM,SAAW,QAEbM,KAAM,CACJH,MAAO,WAETI,OAAQ,CACNd,OAAQ,OACRE,gBAAiB,UACjBQ,MAAO,QACP,UAAW,CACTR,gBAAiB,gBAuCRa,EAlCmB,SAACC,GACjC,IAAMC,EAAUpB,IAChB,OACE,oCACE,yBAAKqB,UAAWD,EAAQL,KACrBI,EAAMG,QAAQC,KAAI,SAAAC,GACf,OACE,kBAACC,EAAA,EAAD,CAAMJ,UAAWD,EAAQlB,MACvB,kBAACwB,EAAA,EAAD,CAAaL,UAAWD,EAAQX,SAC5B,kBAACkB,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAC9BL,EAAEM,KAAKC,OAEZ,kBAACJ,EAAA,EAAD,CAAYE,QAAQ,aACfL,EAAEQ,SAASC,QADhB,MAC4BT,EAAEQ,SAASE,MAErC,yBAAKC,IAAI,OAAOC,IAAG,sCAAiCZ,EAAEa,WAAnC,kBACrB,kBAACV,EAAA,EAAD,CAAYE,QAAQ,aACfL,EAAEc,SAGX,kBAACC,EAAA,EAAD,CACElB,UAAWD,EAAQN,IACnB0B,MAAOhB,EAAEiB,QAAQC,aAM7B,kBAACC,EAAA,EAAD,CAAQtB,UAAWD,EAAQH,OAAQ2B,QAASzB,EAAM0B,WAAlD,qBCvBSC,E,YAtCb,aAAgB,IAAD,8BACb,+CASFD,UAAY,oBAAAE,EAAAC,OAAA,kEAAAD,EAAA,MACJpD,EAAIsD,MAAMC,MAAM,SAAMC,GAAN,eAAAJ,EAAAC,OAAA,uDAChBI,EAASD,EAASE,KAAKC,QAAQ,GADf,WAAAP,EAAA,MAEdhD,EAASkD,IAAT,UAAgBE,EAASE,KAAKC,QAAQ,GAAGtB,SAASC,UAAWiB,MAAK,SAAAC,GACtE,EAAKI,SAAS,CAAEjC,QAAQ,GAAD,mBAAM,EAAKkC,MAAMlC,SAAjB,CAA0BmC,OAAOC,OAAON,EAAQ,CAAEf,WAAac,EAASE,KAAK,GAAGhB,qBAHrF,yCADZ,sCAVG,EAmBfsB,kBAAoB,oBAAAZ,EAAAC,OAAA,kEAAAD,EAAA,MACZpD,EAAIsD,MAAMC,MAAM,SAAMC,GAAN,eAAAJ,EAAAC,OAAA,uDACdI,EAASD,EAASE,KAAKC,QAAQ,GADjB,WAAAP,EAAA,MAEZhD,EAASkD,IAAT,UAAgBE,EAASE,KAAKC,QAAQ,GAAGtB,SAASC,UAAWiB,MAAK,SAAAC,GACtE,EAAKI,SAAS,CAAEjC,QAAQ,GAAD,mBAAM,EAAKkC,MAAMlC,SAAjB,CAA0BmC,OAAOC,OAAON,EAAQ,CAAEf,WAAac,EAASE,KAAK,GAAGhB,qBAHvF,yCADJ,sCAjBlB,EAAKmB,MAAQ,CACXlC,QAAS,GACTsC,KAAM,GACN9C,IAAK,KACLuB,WAAY,IAND,E,sEA4BJ,IAAD,OACR,OACE,yBAAKhB,UAAU,aACX,kBAAC,EAAD,CAA2BuC,KAAMC,KAAKL,MAAMI,KAAMtC,QAASuC,KAAKL,MAAMlC,QAASuB,UAAW,kBAAM,EAAKA,oB,GAhC/EiB,a,MCQjBC,MARf,WACE,OACE,6BACI,kBAAC,EAAD,QCDRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.61e46958.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const api = axios.create({ baseURL: 'https://randomuser.me/api' });\r\nexport const apiFlags = axios.create({ baseURL: 'https://restcountries.eu/rest/v2/name/'})\r\n\r\n\r\n\r\n","import { Button, Card, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    margin: \"20px\",\r\n    display: 'flex',\r\n    backgroundColor: \"#424242\",\r\n    minWidth: \"20rem\",\r\n    width: \"20rem\",\r\n    height: \"10rem\"\r\n  },\r\n  content: {\r\n    flexWrap: 'wrap',\r\n    flex: '1 0 auto',\r\n    maxWidth: '60%',\r\n    color: \"#dcdde1\"\r\n  },\r\n  img: {\r\n    width: \"10rem\",\r\n  },\r\n  div: {\r\n    display: \"flex\",\r\n    flexWrap:  \"wrap\" \r\n  },\r\n  icon: {\r\n    color: \"#2c3e50\"\r\n  },\r\n  button: {\r\n    margin: \"20px\",\r\n    backgroundColor: \"#bdc3c7\",\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#bdc3c7\",\r\n    }\r\n  }\r\n}));\r\n\r\nconst UserPresentationComponent = (props) => {\r\n  const classes = useStyles();  \r\n  return (\r\n    <>\r\n      <div className={classes.div}>\r\n        {props.persons.map(p => {\r\n            return (\r\n              <Card className={classes.root}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {p.name.first}                        \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\">\r\n                        {p.location.country} - {p.location.city}\r\n                    </Typography>\r\n                      <img alt=\"flag\" src={`https://www.countryflags.io/${p.alpha2Code}/flat/32.png`}/>\r\n                    <Typography variant=\"subtitle1\" >\r\n                        {p.gender}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardMedia\r\n                  className={classes.img}\r\n                  image={p.picture.large}\r\n                />\r\n              </Card>\r\n            )}\r\n        )}\r\n      </div>\r\n      <Button className={classes.button} onClick={props.newPerson}>\r\n            NOVO USU√ÅRIO\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\nexport default UserPresentationComponent;","import React, {Component} from 'react';\r\nimport {api, apiFlags} from '../service/api';\r\nimport UserPresentationComponent from './UserPresentationComponent'\r\n\r\nclass UserListContainer extends Component {\r\n  constructor () {\r\n    super();    \r\n    this.state = {\r\n      persons: [],\r\n      flag: '',\r\n      img: null,\r\n      alpha2Code: ''\r\n    };\r\n  }\r\n\r\n  newPerson = async () => {\r\n    await api.get().then( async response => {\r\n      let person = response.data.results[0]\r\n      await apiFlags.get(`${response.data.results[0].location.country}`).then(response => {\r\n        this.setState({ persons: [...this.state.persons, Object.assign(person, { alpha2Code : response.data[0].alpha2Code })] })\r\n      })\r\n    }) \r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await api.get().then( async response => {\r\n        let person = response.data.results[0]\r\n        await apiFlags.get(`${response.data.results[0].location.country}`).then(response => {\r\n          this.setState({ persons: [...this.state.persons, Object.assign(person, { alpha2Code : response.data[0].alpha2Code })] })\r\n        })\r\n    })\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <div className=\"container\">\r\n          <UserPresentationComponent flag={this.state.flag} persons={this.state.persons} newPerson={() => this.newPerson()} />\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default UserListContainer;","import React from 'react';\r\nimport UserListContainer from './Components/UserListContainer'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <UserListContainer></UserListContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}